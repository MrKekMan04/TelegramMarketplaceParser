services:
  scrapper:
    build:
      context: scrapper
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    depends_on:
      - postgresql-scrapper
      - liquibase-migrations-scrapper
    environment:
      - DB_HOST=postgresql-scrapper
      - KAFKA_BOOTSTRAP_SERVERS=kafka1:9092,kafka2:9093,kafka3:9094
    networks:
      - backend

  gateway:
    build:
      context: gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - scrapper
      - postgresql-gateway
      - liquibase-migrations-gateway
    environment:
      - DB_HOST=postgresql-gateway
      - KAFKA_BOOTSTRAP_SERVERS=kafka1:9092,kafka2:9093,kafka3:9094
    networks:
      - backend

  bot:
    build:
      context: bot
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    depends_on:
      - gateway
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka1:9092,kafka2:9093,kafka3:9094
    networks:
      - backend

  postgresql-gateway:
    image: postgres:16
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: gateway
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgresql-gateway:/var/lib/postgresql/data
    networks:
      - backend

  postgresql-scrapper:
    image: postgres:16
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: scrapper
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgresql-scrapper:/var/lib/postgresql/data
    networks:
      - backend

  liquibase-migrations-scrapper:
    image: liquibase/liquibase:4.25
    depends_on:
      - postgresql-scrapper
    command:
      - --changelog-file=master.yml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://postgresql-scrapper:5432/scrapper
      - --username=postgres
      - --password=postgres
      - update
    volumes:
      - ./scrapper/src/main/resources/migrations:/liquibase/changelog
    networks:
      - backend

  liquibase-migrations-gateway:
    image: liquibase/liquibase:4.25
    depends_on:
      - postgresql-gateway
    command:
      - --changelog-file=master.yml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://postgresql-gateway:5432/gateway
      - --username=postgres
      - --password=postgres
      - update
    volumes:
      - ./gateway/src/main/resources/migrations:/liquibase/changelog
    networks:
      - backend

  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    volumes:
      - zoo1_data:/var/lib/zookeeper
    networks:
      - backend

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - kafka1_data:/var/lib/kafka
    networks:
      - backend
    depends_on:
      - zoo1

  kafka2:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka2
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 2
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - kafka2_data:/var/lib/kafka
    networks:
      - backend
    depends_on:
      - zoo1

  kafka3:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka3
    ports:
      - "9094:9094"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 3
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
    volumes:
      - kafka3_data:/var/lib/kafka
    networks:
      - backend
    depends_on:
      - zoo1

volumes:
  postgresql-gateway: { }
  postgresql-scrapper: { }
  zoo1_data: { }
  kafka1_data: { }
  kafka2_data: { }
  kafka3_data: { }

networks:
  backend: { }
